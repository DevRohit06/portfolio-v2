---
import { Image, getImage } from "astro:assets";
const projects = [
  {
    name: "Cart Management System",
    type: "WebApp",
    url: "https://cart-system-sveltekit.vercel.app/",
    github: "https://github.com/DevRohit06/cart-system-sveltekit",
    image:
      "https://www.rohitk06.site/_astro/cart-management-system.lZNDrsCl_2kVlFA.webp",
    slug: "cart-management-system",
    description:
      "This is a Cart Management System made using SvelteKit and Tailwind css with the help of FakeStoreAPI. it has two versions one with sveltekit and another with NextJS.",
    tech: ["HTML", "Javascript", "Css", "Tailwind css", "SvelteKit", "NextJS"],
  },
  {
    name: "LifeInsureEase",
    type: "Website",
    url: "https://lifeinsureease.in/",
    github: "https://github.com/DevRohit06/insurance-website",
    image:
      "https://www.rohitk06.site/_astro/lifeinsureease.BSAQgPVD_1uKge8.webp",
    slug: "lifeinsureease",
    description:
      "This is an Insurance website made using Astro, Reactjs and Tailwind css. ",
    tech: ["HTML", "Javascript", "Css", "Tailwind css", "Astro", "Reactjs"],
  },
  {
    name: "Portfolio Website",
    type: "Website",
    url: "https://rohitk06.site/",
    github: "https://github.com/DevRohit06/Portfolio-website",
    image: "https://www.rohitk06.site/_astro/portfolio.fizbj6Hv_Z1gsU7y.webp",
    slug: "portfolio",
    description:
      "This is my Portfolio website made using Astro, Reactjs and Tailwind css. ",
    tech: ["HTML", "Javascript", "Css", "Tailwind css", "Astro", "Reactjs"],
  },
];
---

<section class="">
  <div class="project-section lg:py-20 py-20">
    <div class="w-10/12 mx-auto overflow-auto">
      <div
        class="text-white font-poppins flex flex-col lg:flex-row justify-between w-full"
      >
        <p class="font-bold text-5xl">Projects</p>
        <p class="md:text-xl text-md lg:w-3/6 lg:mt-0 mt-4">
          Browse through my projects and see the diverse range of websites I've
          designed and developed. Each project comes with a detailed description
          and links for further exploration
        </p>
      </div>
    </div>
    <div class="">
      <div
        class="pin-wrap text-white flex gap-28 overflow-auto w-[400vw] my-20 lg:ml-36 ml-14"
      >
        {
          projects.map((project) => {
            return (
              <div class="projects md:w-[750px] lg:w-[750px] xl:w-[900px] w-3/12 relative">
                <div class="absolute top-0 left-0 w-full h-full bg-black opacity-0 hover:opacity-75 transition-all z-10">
                  <p class="absolute text-4xl font-bold font-poppins bottom-16 left-6">
                    {project.name}
                  </p>
                  <p class="absolute text-2xl font-bold font-poppins bottom-8 left-6">
                    {project.type}
                  </p>
                </div>
                <Image
                  class=""
                  src={project.image}
                  alt={project.name}
                  inferSize={true}
                />
              </div>
            );
          })
        }
      </div>
    </div>
  </div>
</section>

<script>
  import("gsap").then((gsap) => {
    const projects = gsap.gsap.utils.toArray(".projects") as HTMLElement[];
    let totalWidth = 0;
    projects.forEach((project) => {
      totalWidth += project.offsetWidth;
    });

    gsap.gsap.to(".pin-wrap", {
      x: -totalWidth + window.innerWidth / 2, // Scroll to the end of the container
      scrollTrigger: {
        trigger: ".project-section",
        scrub: 1,
        pin: true,
        end: () => `+=${totalWidth}`, // End after scrolling the width of the container
        invalidateOnRefresh: true,
        anticipatePin: 1,
      },
    });
  });
</script>
